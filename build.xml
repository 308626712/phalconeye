<project name="PhalconEye" basedir="." default="info">

    <property file="build.properties"/>
    <import file="data/checkstyle/ant.xml"/>

    <target name="info">
        <echo>
            =============================
            Main commands
            =============================
            info - Shows this help
            install - Run's composer install command.
            build - Prepares environment for distribution.
            dist - Generates distributable package.
            assets - Install modules assets.
            clean - Deletes previously generated files under build/ and dist/.
            doc - Generates the project documentation using PHP Documentor.
            check - Executes the tasks: phpmd, phpcs.
            analyze - Executes the tasks: phpcpd, pdepend, phpcb, phploc.

            =============================
            Code tools
            =============================
            phpcpd - Detects copy/pastes in the code.
            pdepend - Calculates some code metrics using PHP Depend.
            phpmd - Analyzes the code to discover potential problems on it.
            phpcb - Generates a browsable report of code violations using PHP CodeBrowser.
            phploc - Calculates the size of the code using phploc.
            phpcs - Detects standard violations on the code.
        </echo>
    </target>

    <!-- clean - Deletes previously generated files under build/ and dist/ -->
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="assets">
        <!-- Clear assets -->
        <delete>
            <fileset dir="${public.dir}/assets" includes="**/*"/>
            <dirset dir="${public.dir}/assets" includes="**/*"/>
        </delete>

        <exec executable="php">
            <arg value="${public.dir}/index.php"/>
            <arg value="assets"/>
            <arg value="install"/>
        </exec>
    </target>


    <!-- build - Prepares environment for distribution -->
    <target name="build" depends="check">
        <!-- Prepare structure for the build of the project -->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.src.dir}"/>
        <mkdir dir="${report.dir}"/>
        <mkdir dir="${report.dir}/code-browser"/>

        <!-- Copy files -->
        <copy todir="${build.src.dir}/app">
            <fileset dir="${app.dir}"/>
        </copy>
        <copy todir="${build.src.dir}/config">
            <fileset dir="${config.dir}"/>
        </copy>
        <copy todir="${build.src.dir}/core">
            <fileset dir="${core.dir}"/>
        </copy>
        <copy todir="${build.src.dir}/data">
            <fileset dir="${data.dir}"/>
        </copy>
        <copy todir="${build.src.dir}/public">
            <fileset dir="${public.dir}"/>
        </copy>
        <copy file="CHANGELOG.txt" todir="${build.src.dir}"/>
        <copy file="LICENSE.txt" todir="${build.src.dir}"/>
        <copy file="README.md" todir="${build.src.dir}"/>

        <!-- Clear temp data -->
        <delete>
            <fileset dir="${build.src.dir}/data" includes="**/*.php"/>
            <fileset dir="${build.src.dir}/data" includes="**/*.cache"/>
            <fileset dir="${build.src.dir}/data" includes="**/*.log"/>
        </delete>
        <delete dir="${build.src.dir}/data/temp/packages"/>
    </target>

    <!-- dist - Generates distributable package -->
    <target name="dist" depends="build,assets">
        <mkdir dir="${dist.dir}"/>
        <tar destfile="${dist.dir}/${project.name}.tar.gz" basedir="${build.src.dir}" compression="gzip"
             longfile="gnu"/>
    </target>

    <!-- doc - Generates the project documentation using PHP Documentor. -->
    <target name="doc" depends="build">
        <exec executable="phpdoc">
            <arg value="-d"/>
            <arg path="${build.src.dir}"/>
            <arg value="-t"/>
            <arg path="${doc.dir}"/>
        </exec>
    </target>

    <target name="ci">
        <ci/>
    </target>

    <!-- check  -->
    <target name="check" depends="phpmd,phpcs">
    </target>

    <!-- phpmd - Analyzes the code to discover potential problems on it. -->
    <target name="phpmd">
        <phpmd directory="${basedir}"/>
    </target>

    <!-- phpcs - Detects standard violations on the code. -->
    <target name="phpcs">
        <phpcs directory="${basedir}"/>
    </target>

    <!-- analyze  -->
    <target name="analyze" >
        <phpcpd directory="${basedir}"/>
        <pdepend directory="${basedir}"/>
        <phpcb directory="${basedir}"/>
        <phploc directory="${basedir}"/>
    </target>

</project>